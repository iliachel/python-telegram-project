services:
  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/users
    depends_on:
      db:
        condition: service_healthy

  auth-service:
    build: ./auth-service
    ports:
      - "5002:5002"
    environment:
      - USER_SERVICE_URL=http://user-service:5001

  2fa-service:
    build: ./2fa-service
    ports:
      - "5003:5003"
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - MAIL_SERVER=smtp.example.com
      - MAIL_PORT=587
      - MAIL_USE_TLS=True
      - MAIL_USERNAME=your-email@example.com
      - MAIL_PASSWORD=your-password

  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    environment:
      - USER_SERVICE_URL=http://user-service:5001
      - AUTH_SERVICE_URL=http://auth-service:5002
      - TFA_SERVICE_URL=http://2fa-service:5003
      - FASTAPI_SERVICE_URL=http://fastapi-service:8001
      - TELEGRAM_SERVICE_URL=http://telegram-service:8002
    depends_on:
      - user-service
      - auth-service
      - 2fa-service
      - fastapi-service
      - telegram-service

  frontend-service:
    build: ./frontend-service
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-service/src:/app/src
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway

  fastapi-service:
    build: ./fastapi-service
    ports:
      - "8001:8001"

  telegram-service:
    build: ./telegram-service
    ports:
      - "8002:8002"
    env_file:
      - .env

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d users"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
